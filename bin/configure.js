#!/usr/bin/env node
'use strict';

var log      = require('npmlog')
  , minimist = require('minimist')
  , xtend    = require('xtend')
  , path     = require('path')
  , fs       = require('fs')
  ;

function usage() {
  var usageFile = path.join(__dirname, 'configure-usage.txt');
  fs.createReadStream(usageFile).pipe(process.stdout);
  return;
}

var argv = minimist(process.argv.slice(2)
  , { boolean: [ 'h', 'help' ]
    , string: [ 'cc', 'cxx', 'link', 'nodedir', 'target' ]
  });

if (argv.h || argv.help) return usage();

var opts = xtend({
    cc     : 'clang'
  , cxx    : 'clang++'
  , link   : 'clang++'
  , target : process.versions.node
}, argv)

opts.nodedir = argv.nodedir 
  ? path.relative(process.cwd(),  argv.nodedir)
  : path.relative(process.cwd(), 'node-' + opts.target)

var config = 
  '# Generated by "nad configure", you may edit this or just rerun "nad configure"\n\n' +
  [ 'cc', 'cxx', 'link', 'target', 'nodedir' ] 
    .map(function (k) {
      return k.toUpperCase() + '?=' + opts[k]
    }).join('\n')

fs.writeFileSync(path.join(process.cwd(), '.nadconfig.mk'), config);
